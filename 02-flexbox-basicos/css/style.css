:root {
    --azul: #0071b7;
    --blanco: #FFF;
    --naranja: #ff4f1e;
}

html {
    font-size: 62.5%;
    /** 1REM = 10pX **/
    box-sizing: border-box;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}


body {
    background-color: var(--azul);
    font-family: 'Lato', sans-serif;
    font-size: 1.6rem;
}

h1,
h2 {
    color: var(--blanco);
    text-align: center;
    margin: 5rem 0;
    padding: 1rem;
}

.caja-curso {
    background-color: var(--naranja);
    text-align: center;
    color: var(--blanco);
    padding: 5rem;

}

.caja-curso h1 {
    margin: 0;
}

.caja-curso p {
    font-size: 2.4rem;
}

.caja-curso a {
    font-size: 2.4rem;
    padding: 2rem;
    display: inline-block;
    text-decoration: none;
    color: var(--blanco);
    padding: 0;
}


.contenedor {
    max-width: 120rem;
    margin: 0 auto;
}

.box {
    background-color: var(--naranja);
    color: var(--blanco);
    padding: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 4rem;
    border: 1rem solid #bb2b03;
}

.contenedor>div {
    background-color: var(--blanco);
    padding: 5rem;
}

/* 1 */

.d-flex {
    display: flex;
}


/* 
    Posibles valores para flex-direction
    Por defecto = row, las cajas se posicional de izquierda a derecha
    column, las cajas se posicional de arriba abajo
    column-reverse, las cajas se posicionan de abajo hacia arriba
    row-reverse, las cajas se posicionan a la derecha
*/
.d-flex-2 {
    display: flex;
    flex-direction: column-reverse;
}

/* 
    Posibles valores para justify content cuando display direction es row
    - center
    - flex-end
    - flex-start
    - space-between
    - space-around 
    - space-evenly
*/

.d-flex-3 {
    display: flex;
    justify-content: space-evenly;
}

/* 
    Posibles valores para justify content cuando display direction es column,
    La diferencian con el row es que alinea los elementos verticalmente
    - flex-start - Por defecto
    - flex-end
    - space-between
    - space-around 
    - space-evenly
*/

.d-flex-4 {
    display: flex;
    flex-direction: column;
    height: 100rem;
    justify-content: baseline;
}

/* 
    Posibles valores para align-items cuando display direction es row
    - center
    - flex-end
    - flex-start
    - stretch - Valor por defecto
    - baseline
*/

.d-flex-5 {
    display: flex;
    height: 70rem;
    align-items: center;
}

/* 
    Posibles valores para align-items cuando display direction es column
    - center
    - flex-end
    - flex-start
    - stretch - Valor por defecto
    - baseline
*/

.d-flex-6 {
    display: flex;
    flex-direction: column;
    height: 100rem;
    align-items: center;
}

/* 
    Cuando la direccion del elemento es row 
    justify-content mueve el elemento de forma horizontal (Izquierda a Derecha)
    align-items mueve los elementos de forma vertical (Arriba a Abajo)
*/

.d-flex-7 {
    display: flex;
    height: 80rem;

    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
}

/* 
    EJERCICIO 24 DE FLEXBOX FROGGY
    display: flex;
    flex-flow: column-reverse wrap-reverse;
    justify-content: center;
    align-items: flex-end;
    align-content: space-between;
*/

.d-flex-8 {
    display: flex;
}

/* Flex basis solo aplica estilos a elementos hijos, 
    Adicional esta clase tiene un comportamiento parecido al with con la diferencia de que este expande el elemento con base al contenido
*/

.d-flex-8 .box {
    flex-basis: 20rem;
}

.d-flex-9 {
    display: flex;
    gap: 2rem;
}

.d-flex-9 .box {
    flex-basis: 33.3%;
}

.d-flex-10 {
    display: flex;
    flex-wrap: wrap;
}

.d-flex-10 .box {
    flex-basis: 33.3%;
}

.d-flex-11 {
    display: flex;
}

.d-flex-11 .box:nth-child(1) {
    flex-grow: 2;
}

.d-flex-11 .box:nth-child(2) {
    flex-grow: 1;
}

.d-flex-11 .box:nth-child(3) {
    flex-grow: 1;
}

.d-flex-12 {
    display: flex;
}

.d-flex-12 .box {
    flex-grow: 1;
    flex-basis: 30rem;
}

.d-flex-12 .box:nth-child(3) {
    flex-shrink: 2;
}

.d-flex-13 {
    display: flex;
}

/* 
    Flex es la forma corta de usar flex-grow, flex-basis y flex-shrink en una sola linea 
    Primer valor es grow
    Segundo valor shrink
    Ultimo basis 
*/
.d-flex-13 .box {
    flex: 1 0 33.3%;
}